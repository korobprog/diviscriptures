import React, { useState } from 'react';
import LanguageSelector from '@/components/LanguageSelector';
import GroupCard from '@/components/GroupCard';
import ReadingRoom from '@/components/ReadingRoom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Plus, Search, MapPin, Users, Clock, BookOpen } from 'lucide-react';

// Mock data for development
const mockGroups = [
  {
    id: '1',
    name: '–ú–æ—Å–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–∞–Ω–Ω—ã–µ',
    city: '–ú–æ—Å–∫–≤–∞',
    language: '–†—É—Å—Å–∫–∏–π',
    participantsCount: 8,
    maxParticipants: 12,
    nextSessionTime: '–°–µ–≥–æ–¥–Ω—è 19:00',
    adminName: '–ü—Ä–∞–±—Ö—É –ê—Ä–¥–∂—É–Ω–∞ –¥–∞—Å',
    rating: 4.8,
    isActive: true,
    description: '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —á—Ç–µ–Ω–∏–µ –ë—Ö–∞–≥–∞–≤–∞–¥-–≥–∏—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –®—Ä–∏–ª—ã –ü—Ä–∞–±—Ö—É–ø–∞–¥—ã'
  },
  {
    id: '2',
    name: '–ü–∏—Ç–µ—Ä—Å–∫–∞—è —Å–∞–Ω–≥—Ö–∞',
    city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
    language: '–†—É—Å—Å–∫–∏–π',
    participantsCount: 5,
    maxParticipants: 10,
    nextSessionTime: '–ó–∞–≤—Ç—Ä–∞ 18:30',
    adminName: '–ú–∞—Ç–∞–¥–∂–∏ –†–∞–¥—Ö–∞ –¥–µ–≤–∏',
    rating: 4.9,
    isActive: false,
    description: '–ò–∑—É—á–µ–Ω–∏–µ –®—Ä–∏–º–∞–¥-–ë—Ö–∞–≥–∞–≤–∞—Ç–∞–º –≤ –∫—Ä—É–≥—É –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö'
  },
  {
    id: '3',
    name: 'English Seekers',
    city: 'London',
    language: 'English',
    participantsCount: 12,
    maxParticipants: 15,
    nextSessionTime: 'Today 16:00',
    adminName: 'Prabhu Krishna das',
    rating: 4.7,
    isActive: true,
    description: 'Daily reading of Bhagavad-gita As It Is with discussions'
  }
];

const mockVerse = {
  chapter: 2,
  verse: 47,
  sanskrit: '‡§ï‡§∞‡•ç‡§Æ‡§£‡•ç‡§Ø‡•á‡§µ‡§æ‡§ß‡§ø‡§ï‡§æ‡§∞‡§∏‡•ç‡§§‡•á ‡§Æ‡§æ ‡§´‡§≤‡•á‡§∑‡•Å ‡§ï‡§¶‡§æ‡§ö‡§®‡•§ ‡§Æ‡§æ ‡§ï‡§∞‡•ç‡§Æ‡§´‡§≤‡§π‡•á‡§§‡•Å‡§∞‡•ç‡§≠‡•Ç‡§∞‡•ç‡§Æ‡§æ ‡§§‡•á ‡§∏‡§ô‡•ç‡§ó‡•ã‡§Ω‡§∏‡•ç‡§§‡•ç‡§µ‡§ï‡§∞‡•ç‡§Æ‡§£‡§ø‡••',
  translation: '–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–∞–≤–æ –ª–∏—à—å –∏—Å–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–π –¥–æ–ª–≥, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—á–∏—Ç–∞–π —Å–µ–±—è –ø—Ä–∏—á–∏–Ω–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–π—Å—è –∫ –ø–ª–æ–¥–∞–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç—Ä–µ–º–∏—Å—å –±–µ–∑–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.',
  commentary: '–í —ç—Ç–æ–º —Å—Ç–∏—Ö–µ –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è –≤–∞–∂–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø –∫–∞—Ä–º–∞-–π–æ–≥–∏ - –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –±–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ —Ä–∞–±—Å—Ç–≤–∞.'
};

const mockParticipants = [
  { id: '1', name: '–ê—Ä–¥–∂—É–Ω–∞ –¥–∞—Å', isReading: true, isMuted: false, isVideoOn: true },
  { id: '2', name: '–†–∞–¥—Ö–∞ –¥–µ–≤–∏', isReading: false, isMuted: true, isVideoOn: true },
  { id: '3', name: '–ö—Ä–∏—à–Ω–∞ –¥–∞—Å', isReading: false, isMuted: false, isVideoOn: false },
  { id: '4', name: '–ì–æ–≤–∏–Ω–¥–∞ –¥–∞—Å', isReading: false, isMuted: false, isVideoOn: true }
];

const Index = () => {
  const [currentLanguage, setCurrentLanguage] = useState<string>('');
  const [currentView, setCurrentView] = useState<'language' | 'groups' | 'reading'>('language');
  const [searchQuery, setSearchQuery] = useState('');

  const handleLanguageSelect = (language: string) => {
    setCurrentLanguage(language);
    setCurrentView('groups');
  };

  const handleJoinGroup = (groupId: string) => {
    setCurrentView('reading');
  };

  const handleCreateGroup = () => {
    // This would open a create group modal
    console.log('Creating new group...');
  };

  if (currentView === 'language') {
    return <LanguageSelector onLanguageSelect={handleLanguageSelect} />;
  }

  if (currentView === 'reading') {
    return (
      <ReadingRoom
        sessionId="session-1"
        participants={mockParticipants}
        currentVerse={mockVerse}
        timeRemaining={3420}
        isRecording={true}
      />
    );
  }

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <div 
        className="relative bg-gradient-temple border-b border-border/50"
        style={{
          backgroundImage: `linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(/lotus-mandala.jpg)`,
          backgroundSize: 'cover',
          backgroundPosition: 'center'
        }}
      >
        <div className="container mx-auto px-6 py-16">
          <div className="text-center max-w-4xl mx-auto">
            <div className="inline-flex items-center gap-3 mb-6 animate-float">
              <BookOpen className="w-10 h-10 text-primary animate-sacred-pulse" />
              <h1 className="text-5xl md:text-6xl font-bold text-white">
                Divine Scriptures
              </h1>
            </div>
            <p className="text-xl md:text-2xl text-white/90 mb-8 leading-relaxed">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –¥—É—Ö–æ–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è —Å–≤—è—â–µ–Ω–Ω—ã—Ö –ø–∏—Å–∞–Ω–∏–π
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <Badge className="bg-primary/20 text-white text-lg px-4 py-2">
                üìç {currentLanguage === 'ru' ? '–†—É—Å—Å–∫–∏–π' : currentLanguage.toUpperCase()}
              </Badge>
              <div className="flex items-center gap-2 text-white/80">
                <Users className="w-5 h-5" />
                <span>{mockGroups.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-12">
        {/* Search and Actions */}
        <div className="flex flex-col md:flex-row gap-6 mb-12">
          <div className="flex-1">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-muted-foreground" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø –ø–æ –≥–æ—Ä–æ–¥—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-10 h-12 bg-card/50 border-temple-gold/20"
              />
            </div>
          </div>
          
          <Button 
            onClick={handleCreateGroup}
            size="lg"
            className="bg-gradient-sacred hover:opacity-90 transition-sacred shadow-divine px-8"
          >
            <Plus className="w-5 h-5 mr-2" />
            –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É
          </Button>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
          <Card className="shadow-temple bg-gradient-temple border-temple-gold/20">
            <CardContent className="p-6 text-center">
              <Users className="w-8 h-8 mx-auto mb-3 text-krishna-blue" />
              <div className="text-2xl font-bold text-foreground mb-1">247</div>
              <div className="text-sm text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
            </CardContent>
          </Card>
          
          <Card className="shadow-temple bg-gradient-temple border-temple-gold/20">
            <CardContent className="p-6 text-center">
              <Clock className="w-8 h-8 mx-auto mb-3 text-krishna-blue" />
              <div className="text-2xl font-bold text-foreground mb-1">1,247</div>
              <div className="text-sm text-muted-foreground">–ß–∞—Å–æ–≤ —á—Ç–µ–Ω–∏—è</div>
            </CardContent>
          </Card>
          
          <Card className="shadow-temple bg-gradient-temple border-temple-gold/20">
            <CardContent className="p-6 text-center">
              <BookOpen className="w-8 h-8 mx-auto mb-3 text-krishna-blue" />
              <div className="text-2xl font-bold text-foreground mb-1">18</div>
              <div className="text-sm text-muted-foreground">–ò–∑—É—á–µ–Ω–Ω—ã—Ö –≥–ª–∞–≤</div>
            </CardContent>
          </Card>
        </div>

        {/* Groups Grid */}
        <div>
          <div className="flex items-center justify-between mb-8">
            <h2 className="text-3xl font-bold text-foreground">–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã</h2>
            <div className="flex items-center gap-2 text-muted-foreground">
              <MapPin className="w-4 h-4" />
              <span className="text-sm">–ü–æ–∫–∞–∑–∞–Ω–æ {mockGroups.length} –≥—Ä—É–ø–ø</span>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {mockGroups
              .filter(group => 
                group.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                group.city.toLowerCase().includes(searchQuery.toLowerCase())
              )
              .map((group) => (
                <GroupCard
                  key={group.id}
                  group={group}
                  onJoin={handleJoinGroup}
                />
              ))}
          </div>

          {mockGroups.filter(group => 
            group.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
            group.city.toLowerCase().includes(searchQuery.toLowerCase())
          ).length === 0 && (
            <div className="text-center py-16">
              <BookOpen className="w-16 h-16 mx-auto mb-4 text-muted-foreground/50" />
              <h3 className="text-xl font-semibold mb-2 text-foreground">–ì—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-muted-foreground mb-6">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É
              </p>
              <Button 
                onClick={handleCreateGroup}
                className="bg-gradient-sacred hover:opacity-90 transition-sacred"
              >
                <Plus className="w-4 h-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É
              </Button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Index;
