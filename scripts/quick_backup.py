#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∫–∞–ø–∞ –≤—Å–µ—Ö —Å—Ç–∏—Ö–æ–≤
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))
sys.path.append(str(Path(__file__).parent.parent / "python-parser"))

from backup_verses import VerseBackupManager


async def main():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –±–µ–∫–∞–ø –≤—Å–µ—Ö —Å—Ç–∏—Ö–æ–≤"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±–µ–∫–∞–ø–∞ —Å—Ç–∏—Ö–æ–≤...")
    
    backup_manager = VerseBackupManager()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –±–µ–∫–∞–ø –≤—Å–µ—Ö —Å—Ç–∏—Ö–æ–≤
        backup_path = await backup_manager.create_backup(
            compress=True,
            filename=None  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        )
        
        print(f"‚úÖ –ë–µ–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {backup_path}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        backups = await backup_manager.list_backups()
        if backups:
            latest = backups[0]
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∫–∞–ø–∞:")
            print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {latest['created_at']}")
            print(f"   üìñ –°—Ç–∏—Ö–æ–≤: {latest['total_verses']}")
            print(f"   üíæ –†–∞–∑–º–µ—Ä: {latest['size']}")
            print(f"   üóúÔ∏è  –°–∂–∞—Ç: {'–î–∞' if latest['is_compressed'] else '–ù–µ—Ç'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–µ–∫–∞–ø–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
